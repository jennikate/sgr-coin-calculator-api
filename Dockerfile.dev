# pull official base image, that includes uv
FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim

WORKDIR /app

# set environment variables
    # In Docker, containers are often ephemeral. Once the container stops, any .pyc caching is lost.
    # Writing .pyc files just adds I/O and leaves clutter in __pycache__.
    # You don’t get much startup speed benefit in containerized apps, 
    # because containers are usually rebuilt and restarted often.
ENV PYTHONDONTWRITEBYTECODE 1
    # Docker captures logs via stdout/stderr (docker logs <container>). 
    # If Python buffers logs, you won’t see real-time output. 
    # This makes debugging painful and delays logs in monitoring tools like ELK/Fluentd/Datadog.
    # Disabling buffering ensures Flask’s logs (and any print statements) appear immediately.
ENV PYTHONUNBUFFERED 1

# Install uv
RUN pip install --no-cache-dir uv

# Install PostgreSQL client for pg_isready (a lightweight, reliable way to check Postgres)
RUN apt-get update && \
    apt-get install -y postgresql-client && \
    rm -rf /var/lib/apt/lists/*


# Copy project files for editable install if needed
COPY src ./src
COPY run.py .
COPY migrations ./migrations
COPY entrypoint.sh .

# Copy all code (Docker Compose can mount over it in dev)
COPY . .


# Install requirements
RUN uv sync

# Use the entrypoint script
RUN chmod +x entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
